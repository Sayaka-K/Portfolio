{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sayaka/Desktop/Git/Portfolio/src/components/Button.js\";\nimport React from 'react';\nimport './Button.css';\nimport { Link } from \"react-scroll\";\nconst STYLES = ['btn--primary', 'btn--outline'];\nconst SIZES = ['btn--medium', 'btn--large']; // this handles what view should be displayed based on the props passed\n\nexport const Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize,\n  scrollTo\n}) => {\n  // designate what should the layout display\n  const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n  return /*#__PURE__*/_jsxDEV(Link, {\n    activeClass: \"active\",\n    to: scrollTo,\n    className: \"btn-mobile\",\n    spy: true,\n    smooth: true,\n    offset: -70,\n    duration: 800,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `btn ${checkButtonStyle} ${checkButtonSize}`,\n      onClick: onClick,\n      type: type,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/sayaka/Desktop/Git/Portfolio/src/components/Button.js"],"names":["React","Link","STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","scrollTo","checkButtonStyle","includes","checkButtonSize"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AAEA,SAASC,IAAT,QAAqB,cAArB;AACA,MAAMC,MAAM,GAAG,CAAC,cAAD,EAAiB,cAAjB,CAAf;AACA,MAAMC,KAAK,GAAG,CAAC,aAAD,EAAgB,YAAhB,CAAd,C,CAEA;;AACA,OAAO,MAAMC,MAAM,GAAG,CAAC;AACnBC,EAAAA,QADmB;AAEnBC,EAAAA,IAFmB;AAGnBC,EAAAA,OAHmB;AAInBC,EAAAA,WAJmB;AAKnBC,EAAAA,UALmB;AAMnBC,EAAAA;AANmB,CAAD,KAOhB;AAEF;AACA,QAAMC,gBAAgB,GAAGT,MAAM,CAACU,QAAP,CAAgBJ,WAAhB,IAA+BA,WAA/B,GAA6CN,MAAM,CAAC,CAAD,CAA5E;AACA,QAAMW,eAAe,GAAGV,KAAK,CAACS,QAAN,CAAeH,UAAf,IAA6BA,UAA7B,GAA0CN,KAAK,CAAC,CAAD,CAAvE;AAEA,sBACI,QAAC,IAAD;AACI,IAAA,WAAW,EAAC,QADhB;AAEI,IAAA,EAAE,EAAEO,QAFR;AAGI,IAAA,SAAS,EAAC,YAHd;AAII,IAAA,GAAG,EAAE,IAJT;AAKI,IAAA,MAAM,EAAE,IALZ;AAMI,IAAA,MAAM,EAAE,CAAC,EANb;AAOI,IAAA,QAAQ,EAAE,GAPd;AAAA,2BAQI;AACI,MAAA,SAAS,EAAG,OAAMC,gBAAiB,IAAGE,eAAgB,EAD1D;AAEI,MAAA,OAAO,EAAEN,OAFb;AAGI,MAAA,IAAI,EAAED,IAHV;AAAA,gBAKKD;AALL;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAhCM;KAAMD,M","sourcesContent":["import React from 'react';\nimport './Button.css'\n\nimport { Link } from \"react-scroll\";\nconst STYLES = ['btn--primary', 'btn--outline'];\nconst SIZES = ['btn--medium', 'btn--large'];\n\n// this handles what view should be displayed based on the props passed\nexport const Button = ({\n    children, \n    type, \n    onClick, \n    buttonStyle, \n    buttonSize,\n    scrollTo,\n}) => {\n    \n    // designate what should the layout display\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n\n    return (\n        <Link \n            activeClass='active'\n            to={scrollTo}\n            className='btn-mobile'\n            spy={true}\n            smooth={true}\n            offset={-70}\n            duration={800}>\n            <button \n                className={`btn ${checkButtonStyle} ${checkButtonSize}`}\n                onClick={onClick}\n                type={type}\n            >\n                {children}\n            </button>\n        </Link>\n    )\n\n};"]},"metadata":{},"sourceType":"module"}